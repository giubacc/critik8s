kubernetesClusterDomain: cluster.local
amqpProxy:
  amqpProxy:
    args:
    - --upstream
    - tcp://$(RABBITMQ_CLUSTER_SERVICE_HOST):$(RABBITMQ_CLUSTER_SERVICE_PORT)
    image:
      repository: cloudamqp/websocket-tcp-relay
      tag: latest
  ports:
  - port: 15670
    protocol: TCP
    targetPort: 15670
  replicas: 1
  type: ClusterIP
dataCollector:
  replicaCount: 1
  image:
    repository: ghcr.io/open-tomorrow/critik8s/data-collector
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext: {}
  # fsGroup: 2000
  securityContext: {}
  # capabilities
  #   drop
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  service:
    type: LoadBalancer
    port: 8080
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: emit.local
        paths: []
    tls: []
  #  - secretName: example-tls
  #    hosts
  #      - emit.local
  resources: {}
  # limits
  #   cpu: 100m
  #   memory: 128Mi
  # requests
  #   cpu: 100m
  #   memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 50
    #targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
monitorBackend:
  monitorBackend:
    env:
      port: "8081"
    image:
      repository: ghcr.io/open-tomorrow/critik8s/monitor-backend
      tag: latest
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8081
  replicas: 1
  type: ClusterIP
